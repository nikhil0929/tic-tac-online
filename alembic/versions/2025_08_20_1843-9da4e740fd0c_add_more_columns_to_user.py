"""Add more columns to user

Revision ID: 9da4e740fd0c
Revises: caa9bc8653a8
Create Date: 2025-08-20 18:43:22.696272

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9da4e740fd0c'
down_revision: Union[str, Sequence[str], None] = 'caa9bc8653a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('user', sa.Column('age', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('height_cm', sa.Float(), nullable=True))
    op.add_column('user', sa.Column('salary', sa.Numeric(
        precision=10, scale=2), nullable=True))
    op.add_column('user', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('user', sa.Column(
        'zip_code', sa.String(length=10), nullable=True))
    op.add_column('user', sa.Column(
        'created_at', sa.DateTime(), nullable=False))

    # Create the enum type first
    gender_enum = sa.Enum('MALE', 'FEMALE', 'OTHER',
                          'PREFER_NOT_TO_SAY', name='gender')
    gender_enum.create(op.get_bind())

    # Then add the column using the created enum type
    op.add_column('user', sa.Column('gender', gender_enum, nullable=True))

    # Drop the old date_of_birth column and recreate it with proper type
    op.drop_column('user', 'date_of_birth')
    op.add_column('user', sa.Column('date_of_birth', sa.Date(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the new date_of_birth column and recreate it with original type
    op.drop_column('user', 'date_of_birth')
    op.add_column('user', sa.Column('date_of_birth',
                  sa.String(length=200), nullable=True))

    op.drop_column('user', 'gender')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'zip_code')
    op.drop_column('user', 'bio')
    op.drop_column('user', 'salary')
    op.drop_column('user', 'height_cm')
    op.drop_column('user', 'age')
    op.drop_column('user', 'is_active')

    # Drop the enum type
    sa.Enum(name='gender').drop(op.get_bind())
    # ### end Alembic commands ###
